- name: gandalf - system group
  group:
    name: gandalf
    system: yes

- name: gandalf - system user
  user:
    name: gandalf
    group: gandalf
    groups: admin,salt
    append: yes
    system: yes
    shell: /bin/sh

- name: gandalf - config dir
  file:
    path: /opt/gandalf
    owner: gandalf
    state: directory

- name: gandalf - gpg dir
  file:
    path: /etc/salt/gpgkeys
    owner: root
    group: salt
    state: directory

- name: give gandalf user permissions
  copy:
    src: files/gandalf_config/gandalf.sudoers.conf
    dest: /etc/sudoers.d/gandalf
    mode: "0644"

- name: Setting arch (x86)
  set_fact:
    arch: "x86"
  when: platform == "amd64"

- name: Setting arch (arm)
  set_fact:
    arch: "arm64"
  when: platform == "arm64"

- name: Download gandalf archive
  get_url:
    url: "https://supabase-public-artifacts-bucket.s3.amazonaws.com/gandalf/v{{ gandalf_release }}/gandalf-{{ gandalf_release }}-linux-{{ arch }}.tar.gz"
    dest: "/tmp/gandalf.tar.gz"
    timeout: 90

- name: gandalf - unpack archive in /opt
  unarchive:
    remote_src: yes
    src: /tmp/gandalf.tar.gz
    dest: /opt/gandalf/
    owner: gandalf
    extra_opts:
      - --strip-components=1

- name: gandalf - create symlink
  ansible.builtin.file:
    path: /opt/gandalf/gandalf
    src: "/opt/gandalf/gandalf-linux-{{ arch }}"
    state: link
    owner: gandalf
    mode: "0755"
    force: yes

- name: gandalf - create salt systemd timer file
  copy:
    src: files/gandalf_config/gandalf_salt.timer
    dest: /etc/systemd/system/gandalf_salt.timer

- name: gandalf - create salt service file
  copy:
    src: files/gandalf_config/gandalf_salt.service
    dest: /etc/systemd/system/gandalf_salt.service

- name: gandalf - reload systemd
  systemd:
    daemon_reload: yes

# Initially ensure gandalf is installed but not started
- name: gandalf - DISABLE service
  systemd:
    name: gandalf_salt
    enabled: no
    state: stopped
